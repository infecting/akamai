1. _ac array contains basic values for obfuscation
2. Important functions
    A. bmak.gd()
        i. returns the first portion of the _abck cookie
        ii. Function calls
            a. bmak.uar() - returns user agent
            b. bmak.ab(t) + "" - obfuscated come back to later, takes user agent and changes it a bit
            c. bmak.start_ts / 2 - initialized in the IR function just the CF date
            d. bmak.grbv() - brave browser?
            e. bmak.get_browser() - bmak.plen set - navigator.plugins !== undefined ? navigator.plugins.length : -1
            f. bmak.bc - set bmak.xagg based on values 12147 for my browser
            g. bmak.bmisc() - set bmak.pen .wen and .den to 0 detects headless
            h. bmak.bd() format: ",feature:0 | 1" 1 meaning exists 0 meaning doesn't returns a variety of browser fingerprinting information
                a. result: ,cpen:0,i1:0,dm:0,cwen:0,non:1,opc:0,fc:0,sc:0,wrc:1,isc:0,vib:1,bat:1,x11:0,x12:1  
                    cpen = window.callPhantom - check for headless
                    i1 = window.ActiveXObject - Internet Explorer
                    dm = window.documentMode == "number"
                    cwen = window.chrome window.chrome.webstore - check for chrome
                    non = navigator.onLine - always 1
                    opc = window.opera - Check for opera
                    fc = InstallTrigger not undefined - Gecko agent - Firefox checking?
                    sc = window.HTMLElement && Object.prototype.toString.call(window.HTMLElement).indexOf("Constructor") > 0 ? 1 : 0 -- set to 0 I have no clue what this monstrosity does lmfao
                    wrc = window.RTCPeerConnection et al. for other browsers - set to 1
                    isc = window.mozInnerScreenY - check for mozilla again
                    vib = navigator.vibrate - set to 1 for most browsers unless not supported
                    bat = navigator.battery - set to 1 for most browsers unless not supported
                    x11 = Array.prototype.forEach - set to 0, they tried to be sneaky with this
                    x12 = window.FileReader - set to 1 for most browsers unless not supported
        iii. variables used
            a. d = random 11 digit number
            b. s = d * 1e3 / 2
            c. k = d + s + 
            d. bmak.psub = navigator.productSub - 20030107 for me
            e. bmak.lang = navigator.language - en-US can be safely set by default
            f. bmak.prod = navigator.product - Gecko, can probably bet set
            g. bmak.plen = navigator.plugins > 0 - set to 0
            h. bmak.pen, wen and den = 0 - reasoning above on bmak.bmisc()
            i. bmak.z1 = parseInt(current date // (bmak.y1 * bmak.y1)) = 402841 for me
                a. bmak.y1 appears to default to 2016 on 1.7 not sure if it changes
            j. bmak.d3 = cf date % 1e7
                a. bmak.x2 = cf date
            k. n = screen.availWidth 
            l. o = screen availHeight
            m. m = screen.width
            n. r = screen.height
            o. i = window.innerHeight
            p. c = window.innerWidth
            q. b = window.outerWidth
            r. a = bmak.ab(bmak.uar()) + "" - 10418 in my case
            s. bmak.brv = navigator.brave - set to 0 unless using Brave
            t. bmak.loc = undefined ? can't find it anywhere
            u. t = bmak.uar() - window.navigator.userAgent.replace(/\\|"/g, "");
            v. bmak.xagg = bmak.bc() 
        iv. Final Return statement more semantically
            return bmak.uar + ",uaeand" + bmak.bc()/12147 + "," + navigator.productSub + "," + "en-US" + "," + navigator.product + "," + "0" + "," + 0 + "," + "0" + "," + "0" + parseInt(current date // (bmak.y1 * bmak.y1)) = 402841 + "," +  bmak.get_cf_date() % 1e7 + "," + screen.availWidth + "," + screen.availHeight + "," + screen.width + "," + screen.height + "," + window.innerWidth + "," window.innerHeight + "," + window.outerWidth + "," + bmak.bd() //description in functions above + "," + bmak.ab(bmak.uar()) // obfuscate user agent + "," + (Math.random() + "") + "," + bmak.start_ts / 2 + "," + brv + ",loc:"
    B. bmak.cma()
        i. Handles sensor data/ mouse movement
        ii. Function calls
            a. bmak.gf(m) - takes event handler thing and returns -1 or 0
            b. 
        iii. variables used
            a. e = event handler
            b. n = e.clientX - the x position of the mouse 
            c. o = e.clientY - the y position of the mouse
            d. m = e.toElement - the element the mouse is going to - this might cause problems? we'll see.
            e. r = bmak.gf(m) - Checks if the element exists
            f. i = difference between cf date and the website start
            g. bmak.me_vel - Increases by num of mouse events  + difference between date and script start time  + e.clientX + e.clientY  every time you move your mouse? I cant really tell what this does.
            h. bmak.me_cnt - Number of mouse events 
            i. mousemove - c  = mouse event count + "," + 1  + "," + date difference + "," + clientX + clientY
            j. bmak.me_cnt = total events 
            k. bmak.mduce_cnt = all events that aren't mouse events
        mact gets set to mact + c;
    C. bmak.bpd()
        i. Creates cookie afaik
        ii. Function calls
            a. bmak.jrs(num) obfuscates the number into two arrays 5 digit and 3 digit - [12313, 123] 
            b. bmak.fas() - returns browser fingerprint
            c. bmak.hbs() - return headless browser - set to 0
            d. bmak.gwd() - return selenium - set to -1
            e. bmak.sed() - returns list of headless info and Xpath
            f. bmak.mn_get_current_challenges - get challenges returns []
        iii. variables used
            a. t = bmak.get_cf_date();
            b. a = time difference
            c. e = cookie exists? I got 2 in browser
            d. n = first portion of abck - details above function is  bmak.gd()
            e. o = window.DeviceOrientationEvent - "do_en" for me
            f. m = window.DeviceMotionEvent - "dm_en" for me
            g. r = window.TouchEvent - "t_en" for me
            h. i = o + "," + m + "," + r; - just a combination of the 3 above
            i. c = bmak.getforminfo() - need to research this
            j. b = bmak.getdurl() - home url "https://www.fedex.com/en-us/home.html" for me
            k. d = bmak.aj_type - shows where the bpd function was fired from - 1 for cma
            l. s = number of cka calls thing + cma calls vel + 0 + 0 + cta calls vel + cpa calls vel
            m. l = PiZtE
            n. u = obfuscated start time
            o. _ = time difference
            p. f = ((bmak.start_ts / (2016 * 2016)) / 23) / 6
            q. p = number that represents browser fingerprint - 30261693
            r. v = 0 - represents headless browser status
            s. h = -1 - navigator.webdriver
            t. g = cookie array
            u. w = cookie joined
            v. y = bmak.ab(bmak.fpcf.fpValstr) + ""
            w. bmak.fmh = random font seed thing - "87838b6b28b2e952ff9e4e3f1f00f6c6146fa8090ee5d0541c06ecdc180622da" for me
            x. bmak.fmz = window.devicePixelRatio - 2 for me
            y. bmak.ssh = voice random seeed serialized - "0d65734a64c01ce05475c3345af06aef5246ddb8f0161ec4776e6f9c160dfd9b" for me"
            z. bmak.wv = vendor name - Apple for me
            a. bmak.wr = renderer name - "Apple M1" for me
            b. bmak.weh = serialized extension list seed - "f437e95c71eb8e0326eb22e9cba9c05b86068086180a4ca09b3bcd32320a1928" for me
            c. bmak.wl = supported extension length - 31 for me
            d. S = checks for browser and XPathResult - '0,0,0,0,1,0,0' for me
            e. C = [] - get current challenges 
            f. B = ""
            g. x = ""
            h. M = ""
            i. bmak.o9 = obfuscated random value - to function 
            i. bmak.vcact = format is 1/2/3 + "," + date difference + ";"
            i. bmak.sensor_data = version (1.7) + "-1,2,-94,-100," + first portion of abck + "-1,2,-94,-101," + "do_en,dm_en,t_en" + "-1,2,-94,-105," + bmak.informinfo - getforminfo() from beginning  + "-1,2,-94,-102," + getforminfo() + "-1,2,-94,-108," + "-1,2,-94,-110," + mouse events mact + "-1,2,-94,-117," + "-1,2,-94,-111," + "-1,2,-94,-109," + "-1,2,-94,-114," + "-1,2,-94,-103," + bmac.vcact - research + "-1,2,-94,-112," + home url + "-1,2,-94,-115," + cookie joined + "-1,2,-94,-106," + "1";
            j. bmak.sensor_data = bmak_sensor_data ^ + "-1,2,-94,-119,", mr value getmr() function + "-1,2,-94,-122," + "0,0,0,0,1,0,0" + "-1,2,-94,-123," + "-1,2,-94,-124," + "-1,2,-94,-126," + "-1,2,-94,-127," + bmak_nav_perm - check np() function 
            k. P = bmak.ab(bmak.sensor_data) ^ 24
            l. bmak.sensor_data = bmak.sensor_data + "-1,2,-94,-70," + bmak.fpcf.fpValstr + "-1,2,-94,-80," + obfuscated bmak fpcf valstr + "-1,2,-94,-116," + to() function bmak.o9 + "-1,2,-94,-118," + obfuscated sensor data ^ 24 + "-1,2,-94,-129," + webgl info  
